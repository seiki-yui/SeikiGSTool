//MGSOnline
namespace seiki;
class mgso {
	ctor() {
		//读写gso.ini
		import seiki;
		import seiki.mgso;
		import fsys.ini;
		this.path = global.path_mgso
		this.setting = fsys.ini(this.path)
		
		this.network = this.setting.getSection("Network")
		this.font    = this.setting.getSection("Font")
		this.option  = this.setting.getSection("Option")
		this.im      = this.setting.getSection("IM")
		this.replay  = this.setting.getSection("Replay")
	};
	set_network = function(is_host, address, port) {
		if (is_host !== null) this.network.IsHost  = is_host ? "1" : "0"
		if (address !== null) this.network.Address = ip
		if (port !== null)    this.network.Port    = port
	};
	set_font = function(family, size) {
		if (family !== null) this.font.Family = family
		if (size !== null)   this.font.Size   = size
	};
	set_option = function(logfile, caution){
		if (logfile !== null) this.option.LogFile = logfile
		if (caution !== null) this.option.Caution = caution
	};
	clear_im = function() {
		for (i = 1; #seiki.mgso.allow_list; 1) this.im[seiki.mgso.allow_list[[i]]] = null
	};
	set_im = function(im, displaytime, logfile) {
		if (displaytime !== null) this.im.DisplayTime = displaytime
		if (logfile !== null) 	  this.im.LogFile     = logfile
		if (im !== null) if (type(im) == type.table) {
			this.clear_im()
			for (k, v in im) this.im[k] = v
		}
	};
	get_im = function() {
		var tab = {}
		for _, v in ..table.eachIndex(this.setting.readKeys("IM")) 
			if (..string.find(seiki.mgso.allow_list, v)) tab[v] = this.im[v]
		return tab; 
	};
	set_replay = function(folder, file){
		if (folder !== null) this.replay.Folder = folder
		if (file !== null) 	 this.replay.File   = file
	};
	save = function(){
		this.network.save()
		this.font.save()
		this.option.save()
		this.im.save()
		this.replay.save()
	}
}
namespace mgso { 
	allow_list = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
}