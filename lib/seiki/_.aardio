namespace seiki;
import fsys;
import win;
import io;
import string
import process;
import win.ui;
import win.ui.mask;
import thread;
import table;
import console;
import config;


//要塞到下载器里的代码
// import sys.reg
// sys.reg.setValue("HideFileExt", 0, "Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced")

if _STUDIO_INVOKED ::GamePath = "D:\Desktop\GriefSyndrome" else ::GamePath = io._exedir

global.path_swarm = io.joinpath(::GamePath, "Swarm.exe")
global.path_game = io.joinpath(::GamePath, "griefsyndrome.exe")
global.path_gsconfig = io.joinpath(::GamePath, "ConfigTool.exe")
global.path_gsonline = io.joinpath(::GamePath, "griefsyndrome_online.exe")

global.path_mods = io.joinpath(::GamePath, "mods\")
global.path_gsocini = io.joinpath(::GamePath, "gso.ini")

size_list = {
    {name = "640×480";	 width = 640;   height = 480;	},
    {name = "800×600",	 width = 800;	height = 600;	},
    {name = "960×720",	 width = 960;   height = 720;	},
    {name = "1024×768",  width = 1024;  height = 768;	},
    {name = "1200×900",  width = 1200;  height = 900;	},
    {name = "1280×960",  width = 1280;  height = 960;	},
    {name = "1440×1080", width = 1440;  height = 1080;	},
    {name = "1600×1200", width = 1600;	height = 1200;	},
    {name = "全屏", 		 width = 0;		height = 0;		fullscreen = true}
};
regex_ipv4 = "((?:(?:1[0-9][0-9]\.)|(?:2[0-4][0-9]\.)|(?:25[0-5]\.)|(?:[1-9][0-9]\.)|(?:[0-9]\.)){3}(?:(?:1[0-9][0-9])|(?:2[0-4][0-9])|(?:25[0-5])|(?:[1-9][0-9])|(?:[0-9])))[\:：]((?:(?:6553[0-5])|(?:655[0-2][0-9])|(?:65[0-4][0-9]{0,2})|(?:6[0-4][0-9]{0,3})|(?:[1-5][0-9]{4})|(?:[1-9][0-9]{0,3})))"
init = function() {
	if io.exist(global.path_game) io.createDir(global.path_mods)

	var w, h = rget(3,win.getRect(win.getDesktop()).xywh())
	display = { width = w; height = h }
	//console.log("var w, h = rget(3,win.getRect(win.getDesktop()).xywh())")
}
waitMainWindow = function(prcs, timeOut = 1000,waitCls,waitHwnd){
	var hwnd; var i = 0
	do { i += 10;
		hwnd = prcs.getMainWindow(waitCls);
		
	} while ((!hwnd)  && (!waitHwnd || ::User32.IsWindow(waitHwnd)) && ..thread.delay(10) && i <= timeOut);
	
	return hwnd;	
};
set_font = function(winform) {
	 if (winform.isForm) var tab = {{ winform }} else var tab = winform 
	 for (_, it in tab) for (name, ctrl in it.eachControlEx()) ctrl.setFont(name = "微软雅黑");//rl.font : := ::LOGFONT(name = '微软雅黑')
}

delete_into_recycle_bin = function(path) {
    return fsys.delete(path, 0x40 ^ 0x614 /*_FOF_ALLOWUNDO xor _FOF_NO_UI*/ );
};
refresh_by_mods = function(listbox, modpath) {
    listbox.items = {}
    fsys.enum(modpath, "*.dat", function(_, filename) if (filename) listbox.add(io.splitpath(filename).name), false);
};
get_mods = function(modpath) {
	modpath := global.path_mods
	var tab = {}
	fsys.enum(modpath, "*.dat", function(dir, filename, fullpath, _) if (filename) 
		table.push(tab, { dir = dir; filename = filename; fullpath = fullpath; })
	, false);
	return tab; 
}
get_mods_names = function(modpath) {
	var tab = {} 
	for i,v in table.eachIndex(get_mods(modpath)) table.push(tab, io.splitpath(v.filename).name)
	return tab; 
}
set_fullscreen = function(flag) {
	
}

circle = function(form, ctrl) {
	x, y = form.left + 8, form.top + 30
	if (!form.plus) form.add(plus={cls="plus";left=0;top=0;right=0;bottom=0;clipBk=false;z=100};)
	form.plus.z = 100
	form.plus.hide = true
	full = win.getRect(win.getDesktop(), false).setPos(-x, -y).inflate(100, 100)
	orig = win.getRect(win.getDesktop(), false).setPos(-x, -y).inflate(100, 100)
	rect = ctrl.getRect(false).inflate(4, 4)
	form.plus.setRect(rect)
	mask := win.ui.mask(form)
	mask.setRect(rect)
	mask.show(true)
	step = 60; fps = 240
	for(i = 1; step; 1){
		x, y = form.left + 8, form.top + 30
		full.left += (rect.left - orig.left) / step
		full.right += (rect.right - orig.right) / step
		full.top += (rect.top - orig.top) / step
		full.bottom += (rect.bottom - orig.bottom) / step		
		mask.setRect(full.offset(x, y), true)
		full.offset(-x, -y)
		thread.delay(1000 / fps)
	}
	form.plus.hide = false
    form.plus.skin({ border = { default = { width = 1; color = 0xFFFF0000 }}})
	for (i = 0; 30; 1) thread.delay(1000 / fps)
	mask.show(false)
};
setting_open = function(mainForm, i = 1) {
	winform = mainForm.loadForm("\dlg\configs.aardio")
	winform.tab.selIndex = i
	winform.doModal(mainForm)
};
fucking_down = function(){
	/*
	for(i=1;100;1){
		r = 51;
		for(name,ctrl in winform.eachControl() ){
			ctrl.setPos(ctrl.left + math.random(-r, r)/100,ctrl.top + math.random(-r, r)/100)
		}
		winform.redraw()
		thread.delay(1000/3)
	}
	*/
	/*
	mainForm.plus.setRect(obj.getRect().inflate(3, 3))
	ox, oy = mainForm.left, mainForm.top
	full = win.getRect(win.getDesktop(), true)
	orig = win.getRect(win.getDesktop(), true)
	rect = obj.getRect(true).inflate(3, 3)
	mask.setRect(rect)
	mask.show(true)
	
	step = 120
	fps = 20
	for(i = 1; step; 1){
		rect = obj.getRect(true).inflate(3, 3)
		full.left += (rect.left - orig.left) / step
		full.right += (rect.right - orig.right) / step
		full.top += (rect.top - orig.top) / step
		full.bottom += (rect.bottom - orig.bottom) / step
		x, y = mainForm.left - ox, mainForm.top - oy
		mask.setRect(
			win.toScreenRect(
				mainForm.hwnd, full.offset(x, y)
			)
		,true)
		
		
		full.offset(-x, -y)
		thread.delay(1000 / fps)
	}
	
	mainForm.plus.setRect(obj.getRect().inflate(3, 3))
    mainForm.plus.skin({
        color = 0x00000000;
        border = {
            default = {
                width = 1;
                color = 0xFFFF0000;            
            }
        };
    })
	
	for (i = 0; 33; 1) thread.delay(1000 / fps)
	mask.show(false)
	
	*/
}